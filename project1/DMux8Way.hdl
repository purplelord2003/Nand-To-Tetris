// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0, 0, 0, 0, 0, 0, 0] if sel == 000
 *                            [0, in, 0, 0, 0, 0, 0, 0] if sel == 001
 *                            ...
 *                            [0, 0, 0, 0, 0, 0, 0, in] if sel == 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    And(a=notsel0, b=notsel1, out=tmp1);
    And(a=sel[0], b=notsel1, out=tmp2);
    And(a=notsel0, b=sel[1], out=tmp3);
    And(a=sel[0], b=sel[1], out=tmp4);

    And(a=notsel2, b=tmp1, out=temp1);
    And(a=temp1, b=in, out=a);

    And(a=notsel2, b=tmp2, out=temp2);
    And(a=temp2, b=in, out=b);
    
    And(a=notsel2, b=tmp3, out=temp3);
    And(a=temp3, b=in, out=c);
    
    And(a=notsel2, b=tmp4, out=temp4);
    And(a=temp4, b=in, out=d);
    
    And(a=sel[2], b=tmp1, out=temp5);
    And(a=temp5, b=in, out=e);

    And(a=sel[2], b=tmp2, out=temp6);
    And(a=temp6, b=in, out=f);

    And(a=sel[2], b=tmp3, out=temp7);
    And(a=temp7, b=in, out=g);

    And(a=sel[2], b=tmp4, out=temp8);
    And(a=temp8, b=in, out=h);
}